1A

import binascii
import Crypto
from Crypto.PublicKey import RSA #provides facilities for generating new RSA keys 
from Crypto import Random
from Crypto.Hash import SHA
from Crypto.Signature import PKCS1_v1_5 #The full code for the Client class
class Client:
  def __init__(self):
    random = Crypto.Random.new().readw
    #we create private and public keys and store their values in the instance variable. 
    self._private_key = RSA.generate(1024, random)
    self._public_key = self._private_key.publickey()
    self._signer = PKCS1_v1_5.new(self._private_key)
    #The generated public key will be used as the clientâ€™s identity.that returns the HEX representation of the public key

  @property
  def identity(self):
      return binascii.hexlify(self._public_key.exportKey(format='DER')).decode('ascii') 

Demo = Client()
print(Demo.identity)
